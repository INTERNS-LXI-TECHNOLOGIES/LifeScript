package com.diviso.habittrackbackend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEntityAllPropertiesEquals(UserEntity expected, UserEntity actual) {
        assertUserEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertUserEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEntityAllUpdatablePropertiesEquals(UserEntity expected, UserEntity actual) {
        assertUserEntityUpdatableFieldsEquals(expected, actual);
        assertUserEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEntityAutoGeneratedPropertiesEquals(UserEntity expected, UserEntity actual) {
        assertThat(expected)
            .as("Verify UserEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEntityUpdatableFieldsEquals(UserEntity expected, UserEntity actual) {
        assertThat(expected)
            .as("Verify UserEntity relevant properties")
            .satisfies(e -> assertThat(e.getUserId()).as("check userId").isEqualTo(actual.getUserId()))
            .satisfies(e -> assertThat(e.getUserName()).as("check userName").isEqualTo(actual.getUserName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserEntityUpdatableRelationshipsEquals(UserEntity expected, UserEntity actual) {
        // empty method
    }
}
