package com.diviso.perfectday.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PerfectDayAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfectDayAllPropertiesEquals(PerfectDay expected, PerfectDay actual) {
        assertPerfectDayAutoGeneratedPropertiesEquals(expected, actual);
        assertPerfectDayAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfectDayAllUpdatablePropertiesEquals(PerfectDay expected, PerfectDay actual) {
        assertPerfectDayUpdatableFieldsEquals(expected, actual);
        assertPerfectDayUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfectDayAutoGeneratedPropertiesEquals(PerfectDay expected, PerfectDay actual) {
        assertThat(expected)
            .as("Verify PerfectDay auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfectDayUpdatableFieldsEquals(PerfectDay expected, PerfectDay actual) {
        assertThat(expected)
            .as("Verify PerfectDay relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfectDayUpdatableRelationshipsEquals(PerfectDay expected, PerfectDay actual) {
        // empty method
    }
}
