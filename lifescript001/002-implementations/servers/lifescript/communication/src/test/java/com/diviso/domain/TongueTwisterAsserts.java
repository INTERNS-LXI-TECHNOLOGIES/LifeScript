package com.diviso.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TongueTwisterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTongueTwisterAllPropertiesEquals(TongueTwister expected, TongueTwister actual) {
        assertTongueTwisterAutoGeneratedPropertiesEquals(expected, actual);
        assertTongueTwisterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTongueTwisterAllUpdatablePropertiesEquals(TongueTwister expected, TongueTwister actual) {
        assertTongueTwisterUpdatableFieldsEquals(expected, actual);
        assertTongueTwisterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTongueTwisterAutoGeneratedPropertiesEquals(TongueTwister expected, TongueTwister actual) {
        assertThat(expected)
            .as("Verify TongueTwister auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTongueTwisterUpdatableFieldsEquals(TongueTwister expected, TongueTwister actual) {
        assertThat(expected)
            .as("Verify TongueTwister relevant properties")
            .satisfies(e -> assertThat(e.getText()).as("check text").isEqualTo(actual.getText()))
            .satisfies(e -> assertThat(e.getLanguage()).as("check language").isEqualTo(actual.getLanguage()))
            .satisfies(e -> assertThat(e.getDifficultyLevel()).as("check difficultyLevel").isEqualTo(actual.getDifficultyLevel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTongueTwisterUpdatableRelationshipsEquals(TongueTwister expected, TongueTwister actual) {
        // empty method
    }
}
