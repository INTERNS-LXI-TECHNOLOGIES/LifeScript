

entity GpsEntry {
   
    latitude Double required,
    longitude Double required,
    timestamp Instant required,
    deviceId String required,
    status String required
}

entity Child {
    name String required,
    age Integer required,
    emergencyContact String
}

entity Parent {
    name String required,
    phoneNumber String required
}

entity Teacher {
    name String required,
    school String required
}

entity Alert {
    latitude Double required,
    longitude Double required,
    timestamp Instant required,
    deviceId String required,
    status String required
}

entity EmergencyContact {
    name String required,
    type String required,
    phoneNumber String required
}

entity GeoFence {
    safeZones String required
}

entity BatteryStatus {
    batteryLevel Integer required
}

// ----------------------------------------------------------------------------
// Relationships
// ----------------------------------------------------------------------------

/*
 * A Parent can have many Children.
 * Each Child belongs to exactly one Parent.
 */
relationship OneToMany {
    Parent{children} to Child{parent}
}

/*
 * A Teacher is responsible for many Children.
 * Each Child is assigned a single Teacher.
 */
relationship ManyToOne {
    Child{teacher} to Teacher
}

/*
 * GpsEntry records are generated by a Childâ€™s device.
 * Each GpsEntry is associated with one Child, and a Child can have many GpsEntry records.
 */
relationship ManyToOne {
    GpsEntry{child} to Child
}

/*
 * Alerts are triggered by events concerning a Child.
 * A Child can have many Alerts.
 */
relationship OneToMany {
    Child{alerts} to Alert{child}
}

/*
 * A Parent may have several Emergency Contacts.
 */
relationship OneToMany {
    Parent{emergencyContacts} to EmergencyContact{parent}
}

/*
 * Each Child has one GeoFence record defining their safe zone.
 */
relationship OneToOne {
    Child{geoFence} to GeoFence{child}
}

/*
 * Each Child has one BatteryStatus record.
 */
relationship OneToOne {
    Child{batteryStatus} to BatteryStatus{child}
}


paginate * with pagination
dto * with mapstruct
service all with serviceImpl
